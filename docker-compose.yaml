services:
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - loki
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - auction_network

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yml:/etc/loki/loki-config.yml
      - loki-data:/loki
    command: -config.file=/etc/loki/loki-config.yml
    networks:
      - auction_network

  promtail:
    image: grafana/promtail:latest
    volumes:
      - ./auction-service/logs:/logs/auction-service
      - ./identity-service/logs:/logs/identity-service
      - ./promtail-config.yml:/etc/promtail/config.yaml
    command: -config.file=/etc/promtail/config.yaml
    networks:
      - auction_network

  auction-service:
    container_name: auction-service
    build:
      context: ./auction-service
      target: $NODE_ENV
    environment:
      - PORT=7001
      - POSTGRES_USER=postgres
      - POSTGRES_HOST=auction-db
      - POSTGRES_PORT=5432
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=auction-db
      - JWT_SECRET=your-secret-key
      - DATABASE_URL=postgresql://postgres:postgres@auction-db:5432/auction-db?schema=public
    depends_on:
      auction-db:
        condition: service_healthy
    ports:
      - "7001:7001"
    networks:
      - auction_network
    volumes:
      - ./auction-service:/app
      - /app/node_modules

  auction-db:
    image: postgres
    container_name: auction-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=auction-db
    volumes:
      - auction-db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - auction_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  identity-service:
    container_name: identity-service
    build:
      context: ./identity-service
      target: $NODE_ENV
    environment:
      - PORT=7002
      - POSTGRES_USER=postgres
      - POSTGRES_HOST=identity-db
      - POSTGRES_PORT=5432
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=identity-db
      - JWT_SECRET=your-secret-key
      - DATABASE_URL=postgresql://postgres:postgres@identity-db:5432/identity-db?schema=public
    ports:
      - "7002:7002"
    networks:
      - auction_network
    depends_on:
      identity-db:
        condition: service_healthy
    volumes:
      - ./identity-service:/app
      - /app/node_modules

  identity-db:
    image: postgres
    container_name: identity-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=identity-db
    volumes:
      - identity-db-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - auction_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  # rabbitmq:
  #   image: rabbitmq:3-management
  #   container_name: rabbitmq
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=guest
  #     - RABBITMQ_DEFAULT_PASS=guest
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   networks:
  #     - auction_network
  #   healthcheck:
  #     test: ["CMD", "rabbitmqctl", "status"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

networks:
  auction_network:
    driver: bridge

volumes:
  auction-db-data:
  identity-db-data:
  grafana-storage:
  loki-data:
